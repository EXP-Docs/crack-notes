# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "ubuntu/bionic64"
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  # As for local environment, instead of initializing multiple distributions, only
  # one node is initizlied for simplicity. For Vagrantfile that initilizes multiple 
  # distributions, please check the file, Vagrantfile.distribs.
  config.vm.box_check_update = false
  
  # Local proxy can be specified here. IP address should LAN address of local machine.
  # if Vagrant.has_plugin?("vagrant-proxyconf")
  #   config.proxy.http     = "http://192.168.3.9:7890/"
  #   config.proxy.https    = "http://192.168.3.9:7890/"
  #   config.proxy.no_proxy = "localhost,127.0.0.1"
  # end

  config.vm.define 'winxp_x64' do |i|
    i.vm.box = "voidead/win-xp-sp1"
    i.vm.box_version = "1.0"
    i.vm.network 'private_network', type: "dhcp"
    i.vm.hostname = 'winxp-x64'
    i.vm.boot_timeout = 300

    i.vm.guest = :windows
    i.vm.communicator = "winrm"
    i.winrm.retry_limit = 60
    i.winrm.retry_delay = 10
    
    i.vm.provider "virtualbox" do |vb|
      vb.name = 're-winxp-x64'
      vb.gui = true
      vb.cpus = 2
      vb.memory = "4096"
      vb.linked_clone = true
      vb.check_guest_additions = false
    end

    # i.vm.provision 'shell', inline: $script
  end

end


# $script = <<-'CONTENTS'
# export LC_ALL=C
# sudo apt-get update -y
# sudo apt-get install -y python python-pip python3-pip
# curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -
# echo -e "set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\nset termencoding=utf-8\nset encoding=utf-8" | tee /root/.vimrc /home/vagrant/.vimrc > /dev/null
# CONTENTS